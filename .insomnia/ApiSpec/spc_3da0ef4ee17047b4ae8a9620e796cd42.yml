_id: spc_3da0ef4ee17047b4ae8a9620e796cd42
type: ApiSpec
parentId: wrk_70dc0f87319d41c7a309801eca2b568e
modified: 1688965200785
created: 1688726083945
fileName: Jokes.yaml
contents: >-
  openapi: 3.0.0

  info:
    termsOfService: https://jokes.one/terms
    description: " Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points, code samples and subscribing to the API please visit https://jokes.one/api/joke/."
    title: Jokes One API
    version: "1.1"
    contact:
      name: Jokes One
      url: https://jokes.one/api/joke/
  tags:
    - name: Joke of the day
      description: "Access joke of the day service. Use this to get the joke of the day in various categories. This is a free API that is available to public. You must credit Jokes One if you are using the free version. "
      externalDocs:
        description: Find out more
        url: https://jokes.one/api/joke/#joke-of-the-day
    - name: Random Jokes
      description: Access random joke service. Use this to get random jokes , jokes filtered by authors or tags etc. You need an API key to access this service.
    - name: Private Jokes
      description: Store and manage your own jokes. Your own cloud native joke collection!
  paths:
    /jod:
      get:
        tags:
          - Joke of the day
        description: |
          Gets `Joke of the Day`.
          Optional `category` param determines
          the category of returned joke of the day
        operationId: getjoke
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: JOD Category
            in: query
            name: category
            required: false
            schema:
              type: string
              format: string
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/JokeOfTheDayResponse"
                examples:
                  response:
                    value: >-
                      {

                          "success": {
                        "total": 1
                          },
                          "contents": {
                        "jokes": [
                            {
                          "category": "animal",
                          "title": "Animal Joke of the day ",
                          "description": "Animal Joke of the day ",
                          "background": "",
                          "joke": {
                              "title": "Elephant with Diarrhea",
                              "length": "67",
                              "clean": "0",
                              "racial": "0",
                              "date": "2018-11-05",
                              "id": "1tO_XKcm3_qYMkk0k19HEgeF",
                              "text": "What do you give an elephant with diarrhea? \r\n\r\n\r\nLots of room.\r\n\r\n"
                          }
                            }
                        ],
                        "copyright": "2018-20 https://jokes.one"
                          }
                      }
              application/xml:
                examples:
                  response:
                    value: >-
                      <?xml version="1.0"?> <response>

                        <success>
                          <total>1</total>
                        </success>
                        <contents>
                          <jokes>
                            <category>animal</category>
                            <title>Animal Joke of the day </title>
                            <description>Animal Joke of the day </description>
                            <background/>
                            <joke>
                              <title>Elephant with Diarrhea</title>
                              <length>67</length>
                              <clean>0</clean>
                              <racial>0</racial>
                              <date>2018-11-05</date>
                              <id>1tO_XKcm3_qYMkk0k19HEgeF</id>
                              <text>What do you give an elephant with diarrhea? &#xD; &#xD; &#xD; Lots of room.&#xD; &#xD;</text>
                            </joke>
                          </jokes>
                          <copyright>2018-20 https://jokes.one</copyright>
                        </contents>
                      </response>
    /jod/categories:
      get:
        tags:
          - Joke of the day
        description: |
          Gets a list of `Joke of the Day` Categories.
        operationId: getjokes
        security:
          - X-JokesOne-Api-Secret: []
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "success": {
                        "total": 3
                          },
                          "contents": {
                        "categories": {
                            "jod": {
                          "category": "jod",
                          "title": "Joke of the day ",
                          "description": "Joke of the day ",
                          "background": ""
                            },
                            "animal": {
                          "category": "animal",
                          "title": "Animal Joke of the day ",
                          "description": "Animal Joke of the day ",
                          "background": ""
                            },
                            "blonde": {
                          "category": "blonde",
                          "title": "Blonde joke of the day!",
                          "description": "Blonde joke of the day!",
                          "background": ""
                            }
                        },
                        "copyright": "2018-20 https://jokes.one"
                          }
                      }
    /joke:
      put:
        description: Add a new joke to your private collection.
        operationId: petjokess 
        tags:
          - Private Jokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke Title
            in: query
            name: title
            required: true
            schema:
              type: string
              format: string
          - description: Joke Text
            in: query
            name: text
            required: true
            schema:
              type: string
              format: string
          - description: Joke Author
            in: query
            name: author
            required: false
            schema:
              type: string
              format: string
          - description: Comma Separated tags
            name: tags
            in: query
            required: false
            schema:
              type: string
              format: string
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                        "success": {
                          "total": 1
                        },
                        "content": {
                          "joke": {
                            "id": "0tztT1wYHRzdTf7jIccAzweF"
                          }
                        }
                      }
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}              "
      patch:
        description: Update a joke
        operationId: patchingjokes
        tags:
          - Private Jokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke ID
            in: query
            name: id
            required: true
            schema:
              type: string
              format: string
          - description: title
            in: query
            name: title
            required: false
            schema:
              type: string
              format: string
          - description: text
            in: query
            name: text
            required: false
            schema:
              type: string
              format: string
          - description: Joke Author
            in: query
            name: author
            required: false
            schema:
              type: string
              format: string
          - name: tags
            description: Comma Separated tags
            in: query
            required: false
            schema:
              type: string
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                        "success": {
                          "total": 1
                        },
                        "content": {
                          "joke": {
                            "id": "0tztT1wYHRzdTf7jIccAzweF"
                          }
                        }
                      }
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}              "
      get:
        tags:
          - Private Jokes
          - Random Jokes
        description: Gets a `Joke` with a given `id`.
        operationId: privatejokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke ID
            in: query
            name: id
            required: false
            schema:
              type: string
              format: string
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
                examples:
                  response:
                    value: >-
                      {

                          "success": {
                              "total": 1
                          },
                          "contents": {
                              "jokes": [
                                  {
                                      "title": "Anti aircraft weapon",
                                      "length": "212",
                                      "clean": null,
                                      "racial": null,
                                      "id": "pZdOqARLsLVZ84EkBcWptAeF",
                                      "text": "\nThe USA blamed the Russian companies that they were supplying Bagdad with the elastic band for pants. Iraq engineers made the catapults of them and now Iraq soldiers are striking a blow to American air forces.\n\n"
                                  }
                              ],
                              "copyright": "2018-20 https://jokes.one"
                          }
                      }
              application/xml:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
                examples:
                  response:
                    value: >-
                      <?xml version="1.0"?> <response>

                        <success>
                          <total>1</total>
                        </success>
                        <contents>
                          <jokes>
                            <title>Anti aircraft weapon</title>
                            <length>212</length>
                            <clean/>
                            <racial/>
                            <id>pZdOqARLsLVZ84EkBcWptAeF</id>
                            <text>
                      The USA blamed the Russian companies that they were supplying Bagdad with the elastic band for pants. Iraq engineers made the catapults of them and now Iraq soldiers are striking a blow to American air forces.

                      </text>

                          </jokes>
                          <copyright>2018-20 https://jokes.one</copyright>
                        </contents>
                      </response>
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "error": {
                              "code": 401,
                              "message": "Unauthorized"
                          }
                      }
      delete:
        tags:
          - Private Jokes
        description: >
          Delete a joke. The user needs to be the owner of the joke to be able to delete it.
        operationId: deletejokes

        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke ID
            in: query
            name: id
            required: true
            schema:
              type: string
              format: string
        responses:
          "200":
            description: 200  response
            content:
              application/xml:
                examples:
                  response:
                    value: "{}"
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "error": {
                              "code": 401,
                              "message": "Unauthorized"
                          }
                      }
          "404":
            description: 404  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Not Found: Joke not found\"\n    }\n}                      "
    /joke/random:
      get:
        tags:
          - Random Jokes
        description: Gets a `Random Joke`. When you are in a hurry this is what you call to get a random famous joke.
        operationId: getrandomjokes
        security:
          - X-JokesOne-Api-Secret: []
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
                examples:
                  response:
                    value: >-
                      {

                          "success": {
                              "total": 1
                          },
                          "contents": {
                              "jokes": [
                                  {
                                      "title": "Blonde tap dancer",
                                      "length": "86",
                                      "clean": "0",
                                      "racial": "0",
                                      "id": "SVEPCMsk3SbyeWZbERGzKQeF",
                                      "text": "What happened to the blonde tap dancer? \r\nShe slipped off and fell down the drain.\r\n\r\n"
                                  }
                              ],
                              "copyright": "2018-20 https://jokes.one"
                          }
                      }
              application/xml:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
                examples:
                  response:
                    value: |-
                      <?xml version="1.0"?>
                      <response>
                        <success>
                          <total>1</total>
                        </success>
                        <contents>
                          <jokes>
                            <title>Blonde tap dancer</title>
                            <length>86</length>
                            <clean>0</clean>
                            <racial>0</racial>
                            <id>SVEPCMsk3SbyeWZbERGzKQeF</id>
                            <text>What happened to the blonde tap dancer? &#xD;
                      She slipped off and fell down the drain.&#xD;
                      &#xD;
                      </text>
                          </jokes>
                          <copyright>2018-20 https://jokes.one</copyright>
                        </contents>
                      </response>
              application/js:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "error": {
                              "code": 401,
                              "message": "Unauthorized"
                          }
                      }
    /joke/search:
      get:
        tags:
          - Random Jokes
        description: "Search for a `Joke` in Jokes One platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the joke. "
        operationId: gettingjokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke Category
            in: query
            name: category
            required: false
            schema:
              type: string
              format: string
          - description: keyword to search for in the joke
            in: query
            name: query
            required: false
            schema:
              type: string
              format: string
          - description: Joke minimum Length
            in: query
            name: minlength
            required: false
            schema:
              type: integer
              format: int32
              default: 100
          - description: Joke maximum Length
            in: query
            name: maxlength
            required: false
            schema:
              type: integer
              format: int32
              default: 300
          - description: Joke Author
            in: query
            name: author
            required: false
            schema:
              type: string
              format: string
          - description: Should search private collection? Default searches public collection.
            in: query
            name: private
            required: false
            schema:
              type: boolean
              format: boolean
              default: false
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
                examples:
                  response:
                    value: >-
                      {

                          "success": {
                              "total": 1
                          },
                          "contents": {
                              "jokes": [
                                  {
                                      "title": "Blonde tap dancer",
                                      "length": "86",
                                      "clean": "0",
                                      "racial": "0",
                                      "id": "SVEPCMsk3SbyeWZbERGzKQeF",
                                      "text": "What happened to the blonde tap dancer? \r\nShe slipped off and fell down the drain.\r\n\r\n"
                                  }
                              ],
                              "copyright": "2018-20 https://jokes.one"
                          }
                      }
              application/xml:
                schema:
                  $ref: "#/components/schemas/JokeResponse"
                examples:
                  response:
                    value: "<?xml version=\"1.0\"?>\n<response>\n  <success>\n    <total>1</total>\n  </success>\n  <contents>\n    <jokes>\n      <title>Blonde tap dancer</title>\n      <length>86</length>\n      <clean>0</clean>\n      <racial>0</racial>\n      <id>SVEPCMsk3SbyeWZbERGzKQeF</id>\n      <text>What happened to the blonde tap dancer? &#xD;\nShe slipped off and fell down the drain.&#xD;\n&#xD;\n</text>\n    </jokes>\n    <copyright>2018-20 https://jokes.one</copyright>\n  </contents>\n</response> "
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "error": {
                              "code": 401,
                              "message": "Unauthorized"
                          }
                      }
    /joke/categories/search:
      get:
        tags:
          - Random Jokes
        description: |
          Gets a list of `Joke` Categories, based on a query term.
        operationId: gettrandomjokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Search Query
            in: query
            name: query
            required: true
            schema:
              type: string
              format: string
          - description: Response is paged. This parameter controls where response starts the listing at
            in: query
            name: start
            required: false
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"success\": {\n        \"total\": 8\n    },\n    \"contents\": {\n        \"categories\": {\n            \"jod\": \"Joke of the day\",\n            \"work\": \"Work Related Joke of the day\",\n            \"kids\": \"Joke of the day for kids\"\n        },\n        \"copyright\": \"2018-20 https://jokes.one\"\n    }\n}    "
    /joke/list:
      get:
        tags:
          - Private Jokes
        description: Get the list of jokes in your private collection.
        operationId: getnewjokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Response is paged. This parameter controls where response starts the listing at
            in: query
            name: start
            required: false
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: >-
                      {

                          "success": {
                              "total": "263",
                              "range": {
                                  "start": 0,
                                  "end": 5
                              }
                          },
                          "contents": {
                              "jokes": [
                                  {
                                      "joke": "I think you should defend to the death their right to march, and then go down and meet them with baseball bats.",
                                      "length": "111",
                                      "author": "Woody Allen",
                                      "tags": [],
                                      "id": "GkeLUydBfiAH0Tcs2w_gwAeF"
                                  },
                                  {
                                      "joke": "We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this. ... The world will little note nor long remember what we say here, but it can never forget what they did here.",
                                      "length": "310",
                                      "author": "Abraham Lincoln",
                                      "tags": [],
                                      "id": "u6fD9eRFA2NFMHuEoeujaAeF"
                                  },
                                  {
                                      "joke": "Eighty percent of success is showing up.",
                                      "length": "40",
                                      "author": "Woody Allen",
                                      "tags": [
                                          "success",
                                          "tso-top-100"
                                      ],
                                      "id": "nLvp0vLfofW06PILxmERHgeF"
                                  },
                                  {
                                      "joke": "Great ambition is the passion of a great character.  Those endowed with it may perform very good or very bad acts.  All depends on the principals which direct them.",
                                      "length": "164",
                                      "author": "Napoleon Bonaparte",
                                      "tags": [
                                          "ambition",
                                          "inspire",
                                          "passion"
                                      ],
                                      "id": "X8juAoTtvxSEdgA0sGbYeQeF"
                                  },
                                  {
                                      "joke": "I have had dreams, and I have had nightmares. I overcame the nightmares because of my dreams.",
                                      "length": "93",
                                      "author": "Dr. Jonas Salk",
                                      "tags": [
                                          "dream",
                                          "nightmare"
                                      ],
                                      "id": "m_6Fj8QcXlVsQiiW7SAMLAeF"
                                  }
                              ]
                          }
                      }
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
    /joke/tags/add:
      post:
        description: Add a tag to a given Joke.
        operationId: getpeetjokes
        tags:
          - Private Jokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke ID
            in: query
            name: id
            required: true
            schema:
              type: string
              format: string
          - name: tags
            description: Comma Separated tags
            in: query
            required: true
            schema:
              type: string
              format: string
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                      }
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "error": {
                              "code": 401,
                              "message": "Unauthorized"
                          }
                      }
          "404":
            description: 404  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Not Found: Joke not found\"\n    }\n}                      "
    /joke/tags/remove:
      post:
        description: Remove a tag from a given joke.
        operationId: getposttjokes
        tags:
          - Private Jokes
        security:
          - X-JokesOne-Api-Secret: []
        parameters:
          - description: Joke ID
            in: query
            name: id
            required: true
            schema:
              type: string
              format: string
          - name: tags
            description: Comma Separated tags
            in: query
            required: true
            schema:
              type: string
              format: string
        responses:
          "200":
            description: 200  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                      }
          "401":
            description: 401  response
            content:
              application/json:
                examples:
                  response:
                    value: |-
                      {
                          "error": {
                              "code": 401,
                              "message": "Unauthorized"
                          }
                      }
          "404":
            description: 404  response
            content:
              application/json:
                examples:
                  response:
                    value: "{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Not Found: Joke not found\"\n    }\n}                      "
  servers:
    - url: https://api.jokes.one
    - url: http://api.jokes.one
  components:
    securitySchemes:
      X-JokesOne-Api-Secret:
        type: apiKey
        name: X-JokesOne-Api-Secret
        in: header
    schemas:
      JokeResponse:
        properties:
          success:
            description: Metadata about this successful call
            type: string
          contents:
            properties:
              jokes:
                description: List of jokes
                items:
                  $ref: "#/components/schemas/Joke"
                type: array
      JokeOfTheDayResponse:
        properties:
          success:
            description: Metadata about this successful call
            type: string
          contents:
            properties:
              jokes:
                description: List of jokes
                items:
                  $ref: "#/components/schemas/JokeOfTheDay"
                type: array
      JokeOfTheDay:
        allOf:
          - $ref: "#/components/schemas/Joke"
          - required:
              - date
            properties:
              date:
                description: Date this joke of the day belongs to
                type: string
      Joke:
        allOf:
          - $ref: "#/components/schemas/NewJoke"
          - type: object
            properties:
              id:
                description: Unique identifier representing a specific joke in jokes.one.
                type: string
              image:
                description: Image URL that can be used for background to display this joke.
                type: string
              length:
                description: Length of the joke string.
                format: int32
                type: integer
      NewJoke:
        properties:
          author:
            description: Author name of joke.
            type: string
          title:
            description: Title of the Joke.
            type: string
          joke:
            description: The Joke.
            type: string
          tags:
            description: Array of tags/categories.
            items:
              type: string
            type: array
        required:
          - joke
          - title
contentType: yaml
